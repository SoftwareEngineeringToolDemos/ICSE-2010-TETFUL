<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testful:class xmlns:testful="http://testful.sourceforge.net/schema/2.0/testful.xsd" xmlns:beh="http://testful.sourceforge.net/schema/2.0/behavioral.xsd">

    <constructor skip="false">
        <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior"/>
    </constructor>
    <constructor skip="false">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="false" mutated="false" type="boolean"/>
        <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior">
        	<abstraction function="testful.coverage.behavior.Abstractor" expression="p0" parameters=""/>
        </extra>
    </constructor>
    <constructor skip="false">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="false" mutated="false" type="int"/>
        <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior">
        	<abstraction function="testful.coverage.behavior.Abstractor" expression="p0" parameters=""/>
        </extra>
    </constructor>
    <constructor skip="false">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior">
        	<abstraction function="testful.coverage.behavior.Abstractor" expression="p0" parameters=""/>
        </extra>
    </constructor>
    <constructor skip="false">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="java.lang.String"/>
        <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior">
        	<abstraction function="testful.coverage.behavior.Abstractor" expression="p0" parameters=""/>
        </extra>
    </constructor>
    <constructor skip="false">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="test.coverage.Behavior"/>
        <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior">
        	<abstraction function="testful.coverage.behavior.Abstractor" expression="p0" parameters=""/>
        </extra>
    </constructor>

    <method kind="static" exposeState="false" name="sMethod0">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="false" mutated="false" type="boolean"/>
        <parameter exchangeStateWith="" exposedByReturn="false" captured="false" mutated="false" type="boolean"/>
        <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior">
        	<abstraction function="testful.coverage.behavior.AbstractorBoolean" expression="p0 &amp;&amp; p1" parameters=""/>
        </extra>
    </method>
    <method kind="static" exposeState="false" name="sMethod1">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="false" mutated="false" type="int"/>
        <parameter exchangeStateWith="" exposedByReturn="false" captured="false" mutated="false" type="int"/>
        <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior">
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="p0" parameters="p1"/>
        </extra>
    </method>
    <method kind="static" exposeState="false" name="sMethod2">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="java.lang.Object"/>
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior">
        	<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="p1"/>
        </extra>
    </method>
    <method kind="static" exposeState="false" name="sMethod3">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="java.lang.String"/>
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="java.lang.String"/>
        <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior">
        	<abstraction function="testful.coverage.behavior.AbstractorBoolean" expression="p0 == p1" parameters=""/>
        	<abstraction function="testful.coverage.behavior.AbstractorBoolean" expression="p0.equals(p1)" parameters=""/>
        </extra>
    </method>
     
    
    <method kind="observer" exposeState="false" name="getN"/>
    <method kind="observer" exposeState="false" name="getThree"/>
    
    <method kind="mutator" exposeState="false" name="method0">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="false" mutated="false" type="boolean"/>
        <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior"/>
    </method>
    <method kind="mutator" exposeState="false" name="method1">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="false" mutated="false" type="int"/>
        <parameter exchangeStateWith="" exposedByReturn="false" captured="false" mutated="false" type="int"/>
        <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior"/>
    </method>
    <method kind="mutator" exposeState="false" name="method2">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="java.lang.Object"/>
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior"/>
    </method>
    <method kind="mutator" exposeState="false" name="method3">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="java.lang.String"/>
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="java.lang.String"/>
        <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior"/>
    </method>
    
    <extra xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="beh:behavior">
		<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="this.getN()" parameters="0:1:this.getThree()"/>
    </extra>
    
</testful:class>